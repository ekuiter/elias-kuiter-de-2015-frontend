@import "variables";
@import "mixins";

.project-container {
  @include fadeInAnimation($initDuration);
  @include centerChild;

  .project {
    width: 80%;
    background-color: $itemColor;
    margin: $itemMargin;
    padding: 10px;

    @include media($breakMedium) {
      width: 100%;
      margin: $itemMargin 0 0 0;
    }

    h2.show-on-small {
      text-align: center;
      margin: 0.4em 0 0.6em 0;
    }

    .actions {
      display: flex;
      flex-wrap: wrap;
      list-style: none;
      padding: 0;
      font-weight: bold;

      @include media($breakMedium) {
        justify-content: center;
      }

      .action {
        @mixin action($actionWidth, $actionFontSize, $largeActionFontSize, $actionMargin, $smallActionHeight) {
          min-width: $actionWidth;
          margin: $actionMargin $actionMargin * 2 $actionMargin 0;

          a {
            @include centerChild;
            @include transitions((
                hoverTransition(background-color, $from: $actionColor, $to: $actionHoverColor),
                hoverTransition(font-size, $from: $actionFontSize, $to: $largeActionFontSize),
                hoverTransition(color, $to: $itemColor),
                width $initDuration,
                margin $initDuration,
            ));
            height: $smallActionHeight;

            span {
              margin: 10px;
              border-bottom: 2px solid $actionColor;
            }

            svg {
              height: 20px;
              margin: 10px 0 10px 10px;

              .accent { transition: fill $hoverDuration; fill: $accColor; }
            }

            &:hover {
              svg .accent { fill: $itemColor; }
            }
          }
        }

        $largeActionFontSize: $actionFontSize * 1.2;

        @include action($actionWidth, $actionFontSize, $largeActionFontSize, $actionMargin, $smallActionHeight);

        @include media($breakMedium) {
          @include action($actionWidth * $smallActionFactor, $actionFontSize * $smallActionFactor,
              $largeActionFontSize * $smallActionFactor, $actionMargin * $smallActionFactor,
              $smallActionHeight * $smallActionFactor);
        }
      }
    }

    .images {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-around;
      align-items: center;
      height: 100%;
      float: left;
      list-style: none;
      padding: 0;

      li {
        a {
          display: block;
          width: 100%;
          height: 100%;

          img {
            width: 100%;
            transition: border-color $hoverDuration, box-shadow $hoverDuration;
            border: 2px solid $itemColor;
          }
        }

        &.active img, a:hover img {
          border-color: $accColor;
          box-shadow: 0 0 0 3px $accColor;
          filter: brightness(110%);
        }
      }
    }

    &.columns-1 .images {
      width: 25%;
      margin: 10px 20px 5px 5px;
    }

    &.columns-2 .images {
      width: 50%;
      margin: 10px 10px 5px 0;

      li { width: 46%; }
    }

    &.columns-1 .images, &.columns-2 .images {
      @include media($breakMedium) {
        float: none;
        width: auto;
        margin: 10px;

        li { width: 30%; }
      }

      @include media($breakSmall) {
        li { width: 46%; }
      }
    }

    .image {
      img {
        max-width: 70%;
        @include media($breakMedium) { max-width: 100%; }
      }
    }

    &.columns-2 .image {
      img {
        max-width: 48%;
        @include media($breakLarge) { max-width: 100%; }
        @include media($breakMedium) { max-width: 100%; }
      }
    }
  }
}