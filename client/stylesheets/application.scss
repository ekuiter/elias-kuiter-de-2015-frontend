@import "variables";
@import "mixins";

body {
  @include fadeInAnimation($initDuration);
  background-color: $bgColor;
  color: $fgColor;
  font-family: "Trebuchet MS", sans-serif;

  &:not(.has-script) {
    margin-top: 100px;
    text-align: center;
    font-size: 20px;

    &::before {
      content: "Schalten Sie bitte JavaScript ein, um diese Website zu benutzen - es tut gar nicht weh!";
    }
  }
}

main {
  line-height: 1.5;

  h1, h2, h3, h4, h5, h6 {
    margin: 0.6em 0 0.4em 0;
  }

  p, pre, ul {
    margin: 0.4em 0 0.8em 0;
  }

  ul {
    list-style: square inside;
  }

  ol {
    list-style-position: inside;
  }

  code {
    font-family: Consolas, Monaco, "Lucida Console", monospace;
    font-size: 0.9em;
    letter-spacing: -0.04em;
  }

  .big {
    font-size: 1.3em;
  }

  .project-container .project.meta {
    max-width: $breakMedium;

    .imprint-nowrap {
      margin-left: 70px;
    }

    .images .big {
      font-size: 4em;
      margin: 20px;
    }
  }
}

a {
  color: $accColor;
  text-decoration: none;

  &:not(.no-underline) {
    &:hover, &:focus {
      text-decoration: underline;
    }
  }

  &.admin {
    @include inCorner(top right, 15px, $position: absolute);
    color: $fgColor !important;
    opacity: 0.2;

    &:hover, &:focus {
      text-decoration: none;
      opacity: 0.5;
    }
  }
}

.spinner-container {
  @include fadeInAnimation($initDuration);
  position: relative;
  margin-top: 20px;
  height: 50px;
}

.fade-in {
  @include fadeInAnimation($initDuration);
}

.show-on-large {
  @include media($breakMedium) { display: none; }
}

.show-on-small {
  display: none;
  @include media($breakMedium) { display: block; }
}

.footer-actions .action {
    min-width: $smallItemHeight !important;
    $largeActionFontSize: $actionFontSize * 1.2;

    @include action($actionWidth, $actionFontSize, $largeActionFontSize, $actionMargin, $smallActionHeight);

    @include media($breakMedium) {
	min-width: $smallItemHeight * $smallItemFactor !important;
        @include action($actionWidth * $smallActionFactor, $actionFontSize * $smallActionFactor,
			$largeActionFontSize * $smallActionFactor, $actionMargin * $smallActionFactor,
			$smallActionHeight * $smallActionFactor);
    }

    $svgHeight: $smallItemHeight * 0.6;
    $svgHoverHeight: $smallItemHeight * 0.72;

    a svg {
	transition: height $hoverDuration;
	height: $svgHeight;
	margin: 5px;
	@include media($breakMedium) {
	    height: $svgHeight * $smallItemFactor;
	}
    }

    &:hover {
	a svg {
	    height: $svgHoverHeight;
	    @include media($breakMedium) {
		height: $svgHoverHeight * $smallItemFactor;
	    }
	}
    }
}
